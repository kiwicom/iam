name: HTTP Server Tests
testcases:
  - name: Test that server responds correctly to hello world
    steps:
      - type: http
        method: GET
        url: "http://{{.url}}:{{.httpPort}}/"
        assertions:
          - result.body ShouldEqual 42
          - result.statuscode ShouldEqual 200
  - name: Test rejection if authentication header is missing
    steps:
      - type: http
        method: GET
        url: "http://{{.url}}:{{.httpPort}}/v1/user?email=cached@test.kiwi"
        headers:
          User-Agent: "Venom/0 (Kiwi.com test)"
        assertions:
          - "result.body ShouldEqual 'Use the Bearer {token} authorization scheme\n'"
          - result.statuscode ShouldEqual 401
  - name: Test missing user agent
    steps:
      - type: http
        method: GET
        url: "http://{{.url}}:{{.httpPort}}/v1/user?email=cached@test.kiwi"
        headers:
          authorization: "Bearer testtoken"
        assertions:
          - "result.body ShouldEqual 'user agent string is not compliant with Kiwi RFC-22\n'"
          - result.statuscode ShouldEqual 401
  - name: Test getting missing user
    steps:
      - type: http
        method: GET
        url: "http://{{.url}}:{{.httpPort}}/v1/user?email=test@tester.kiwi"
        headers:
          User-Agent: "Venom/0 (Kiwi.com test)"
          authorization: "Bearer testtoken"
        assertions:
          - "result.body ShouldEqual 'User test@tester.kiwi not found\n'"
          - result.statuscode ShouldEqual 404
  - name: Test getting existing user
    steps:
      - type: http
        method: GET
        url: "http://{{.url}}:{{.httpPort}}/v1/user?email=cached@tester.kiwi"
        headers:
          User-Agent: "Venom/0 (Kiwi.com test)"
          authorization: "Bearer testtoken"
        assertions:
          - result.bodyjson.firstname ShouldEqual Test
          - result.bodyjson.lastname ShouldEqual Cached
          - result.bodyjson.location ShouldEqual Praha
          - result.bodyjson.position ShouldEqual Janitor
          - result.bodyjson.department ShouldEqual "Engineering/Content + CS Systems/CS systems/CS Systems Frontend"
          - result.bodyjson.teammembership.teammembership1 ShouldEqual "Engineering"
          - result.bodyjson.teammembership.teammembership2 ShouldEqual "Engineering/Content + CS Systems"
          - result.bodyjson.teammembership.teammembership3 ShouldEqual "Engineering/Content + CS Systems/CS systems"
          - result.bodyjson.teammembership.teammembership4 ShouldEqual "Engineering/Content + CS Systems/CS systems/CS Systems Frontend"
          - result.bodyjson ShouldNotContainKey permissions
          - result.statuscode ShouldEqual 200
  - name: Test getting existing user with permissions
    steps:
      - type: http
        method: GET
        url: "http://{{.url}}:{{.httpPort}}/v1/user?email=cached@tester.kiwi&permissions=true"
        headers:
          User-Agent: "Venom/0 (Kiwi.com test)"
          authorization: "Bearer testtoken"
        assertions:
          - result.bodyjson.firstname ShouldEqual Test
          - result.bodyjson.lastname ShouldEqual Cached
          - result.bodyjson.location ShouldEqual Praha
          - result.bodyjson.position ShouldEqual Janitor
          - result.bodyjson.department ShouldEqual "Engineering/Content + CS Systems/CS systems/CS Systems Frontend"
          - result.bodyjson.teammembership.teammembership1 ShouldEqual "Engineering"
          - result.bodyjson.teammembership.teammembership2 ShouldEqual "Engineering/Content + CS Systems"
          - result.bodyjson.teammembership.teammembership3 ShouldEqual "Engineering/Content + CS Systems/CS systems"
          - result.bodyjson.teammembership.teammembership4 ShouldEqual "Engineering/Content + CS Systems/CS systems/CS Systems Frontend"
          - result.bodyjson.permissions.permissions0 ShouldEqual credit-card.create
          - result.statuscode ShouldEqual 200
  - name: Test getting existing user with deprecated token scheme
    steps:
      - type: http
        method: GET
        url: "http://{{.url}}:{{.httpPort}}/v1/user?email=cached@tester.kiwi"
        headers:
          User-Agent: "Venom/0 (Kiwi.com test)"
          authorization: "testtoken"
        assertions:
          - "result.body ShouldEqual 'Use the Bearer {token} authorization scheme\n'"
          - result.statuscode ShouldEqual 401
  - name: Test getting existing non-cached user
    steps:
      - type: http
        method: GET
        url: "http://{{.url}}:{{.httpPort}}/v1/user?email=fetched@tester.kiwi"
        headers:
          User-Agent: "Venom/0 (Kiwi.com test)"
          authorization: "Bearer testtoken"
        assertions:
          - result.bodyjson.firstname ShouldEqual Test
          - result.bodyjson.lastname ShouldEqual Fetched
          - result.bodyjson.location ShouldEqual Praha
          - result.bodyjson.position ShouldEqual Janitor
          - result.bodyjson.department ShouldEqual "Engineering/Content + CS Systems/CS systems/CS Systems Frontend"
          - result.bodyjson.teammembership.teammembership1 ShouldEqual "Engineering"
          - result.bodyjson.teammembership.teammembership2 ShouldEqual "Engineering/Content + CS Systems"
          - result.bodyjson.teammembership.teammembership3 ShouldEqual "Engineering/Content + CS Systems/CS systems"
          - result.bodyjson.teammembership.teammembership4 ShouldEqual "Engineering/Content + CS Systems/CS systems/CS Systems Frontend"
          - result.bodyjson ShouldNotContainKey permissions
          - result.statuscode ShouldEqual 200
  - name: Test GET /v1/teams
    steps:
      - type: http
        method: GET
        url: "http://{{.url}}:{{.httpPort}}/v1/teams"
        headers:
          User-Agent: "Venom/0 (Kiwi.com test)"
          authorization: "Bearer testtoken"
        assertions:
          - result.bodyjson.engineering ShouldEqual 2
          - result.bodyjson.engineering_content_+_cs_systems ShouldEqual 1
          - result.bodyjson.engineering_utitlies ShouldEqual 1
          - result.statuscode ShouldEqual 200
  - name: Test getting permissions for multiple services
    steps:
      - type: http
        method: GET
        url: "http://{{.url}}:{{.httpPort}}/v1/permissions?services=venom,otherservice"
        headers:
          User-Agent: "Venom/0 (Kiwi.com test)"
          authorization: "Bearer testtoken"
        assertion:
          - result.bodyjson.venom.venom0 ShouldEqual credit-card.create
          - result.bodyjson.otherservice.otherservice0 ShouldEqual access.admin
          - result.statuscode ShouldEqual 200
  - name: Test getting permissions for one service
    steps:
      - type: http
        method: GET
        url: "http://{{.url}}:{{.httpPort}}/v1/permissions?services=otherservice"
        headers:
          User-Agent: "Venom/0 (Kiwi.com test)"
          authorization: "Bearer testtoken"
        assertion:
          - result.bodyjson ShouldNotContainKey venom
          - result.bodyjson.otherservice.otherservice0 ShouldEqual access.admin
          - result.statuscode ShouldEqual 200
